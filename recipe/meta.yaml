
{% set name = "STIR" %}
{% set version = "6.2.0" %}
{% set build_number = 3 %}
{% if cuda_compiler_version != "None" %}
{% set build_number = build_number + 200 %}
{% endif %}

{% if cuda_compiler_version in (None, "None", True, False) %}
{% set cuda_major = 0 %}
{% else %}
{% set cuda_major = environ.get("cuda_compiler_version", "11.8").split(".")[0] | int %}
{% endif %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/UCL/STIR/archive/refs/tags/rel_{{ version }}.tar.gz
  sha256: c2c072b50545a16484951a6412ab5bbb2944320f5c7de12ead7329725d3d7044

build:
  number: {{ build_number }}
  # skipping CUDA 11 builds on Windows due to missing cudart.dll problems, see https://github.com/conda-forge/stir-feedstock/pull/121
  {% if cuda_major == 11 %}
  skip: true  # [win]
  {% endif %}
  # skipping osx due to STIR issues #1490, 1491, 1494
  skip: true  # [osx]
  ignore_run_exports:
    - cudatoolkit
  string: cuda{{ cuda_compiler_version | replace('.', '') }}_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != "None"]
  string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == "None"]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ stdlib("c") }}
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}  # [cuda_compiler_version != "None"]
    {% if cuda_major >= 12 %}
    - cuda-driver-dev                        # [build_platform != target_platform and linux]
    - cuda-cudart-dev                        # [build_platform != target_platform]
    {% endif %}
    - llvm-openmp  # [osx]
    - libgomp      # [linux]
    - cmake
    - ninja
    - swig
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - numpy                                  # [build_platform != target_platform]
  host:
    - libboost-headers
    - hdf5  # [not win and not osx_arm64]
    - python
    - numpy
    - libitk-devel
    - libitk
    - nlohmann_json
    - cuda-version {{ cuda_compiler_version }}  # [(cuda_compiler_version or "None") != "None"]
    {% if cuda_major >= 12 %}
    - cuda-driver-dev                        # [linux]
    - cuda-cudart-dev
    {% endif %}
    - libparallelproj
    # Recent ROOT needs C++ 20, but CUDA 11 doesn't support it
    # osx-arm skipped due to https://github.com/conda-forge/root-feedstock/issues/260
    # Python 3.12 not yet supported in ROOT
    # Note: these conditions have to be replicated in the test section
    {% if cuda_major != 11 %}
    - root_base  # [not (py==312 or win or (osx and arm64))]
    {% endif %}
    - zlib  # [win]
  run:
    - python
    - {{ pin_compatible('numpy') }}
    - __cuda  # [cuda_compiler_version != "None"]
    - cuda-version {{ cuda_compiler_version }}  # [(cuda_compiler_version or "None") != "None"]

test:
  requires:
    - pytest
  imports:
    - stir
  source_files:
    - recon_test_pack
    - examples
    - src/swig/test/python
  commands:
    - stir_config --config-dir
    - cd recon_test_pack
    # use ugly work-around to avoid the next test to run CUDA tests
    - env TRAVIS=disable_cuda_tests ./run_test_simulate_and_recon.sh  # [not win]
    - ./run_test_listmode_recon.sh  # [not win]
    - ./run_test_simulate_and_recon_with_motion.sh  # [not win]
    - ./run_scatter_tests.sh  # [not win]
    - ./run_tests.sh --nointbp  # [not win]
    - ./run_test_zoom_image.sh  # [not win]
    {% if cuda_major != 11 %}
    - ./run_root_GATE.sh        # [not (py==312 or win or (osx and arm64))]
    {% endif %}
    - run_tests  # [win]
    - cd SPECT
    - ./run_SPECT_tests.sh  # [not win]
    - cd ..
    - cd ..
    - pytest src/swig/test/python


about:
  home: http://stir.sourceforge.net/
  license: Apache-2.0 AND LicenseRef-PARAPET-license
  license_file: LICENSE.txt
  summary: 'Software for Tomographic Image Reconstruction'
  description: |
    STIR is Open Source software for use in tomographic imaging.
    Its aim is to provide a Multi-Platform Object-Oriented framework for all data manipulations in tomographic imaging.
    Check the recipe at https://github.com/conda-forge/stir-feedstock/blob/main/recipe/meta.yaml
    to see which dependencies are included in this conda package.

    This package contains all STIR utilities and Python support. It is built with ITK on all platforms
    and (where supported) ROOT on Linux and OSX.

  doc_url: http://stir.sourceforge.net/documentation
  dev_url: https://github.com/UCL/STIR

extra:
  recipe-maintainers:
    - KrisThielemans
    - olivierverdier
    - paskino
    - casperdcl
